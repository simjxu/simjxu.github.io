{"version":3,"sources":["webpack:///./src/pages/about.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["query","AboutPage","_ref","data","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","style","color","allMarkdownRemark","edges","map","_ref2","node","frontmatter","title","_ref3","dangerouslySetInnerHTML","__html","html","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","ListLink","react_default","display","marginRight","gatsby_browser_entry","Header","siteTitle","background","marginBottom","margin","maxWidth","padding","listStyle","float","header_ListLink","href","textDecoration","Layout","Fragment","Helmet_default","site","siteMetadata","meta","name","content","lang","header","paddingTop","_755544856"],"mappings":"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","file":"component---src-pages-about-js-ddf64221a4cad682ecc8.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from 'gatsby'\n\n// This is only used for linking in between different sites in the directory\nimport Layout from '../components/layout'\n\nconst AboutPage = ({ data }) => {\n\treturn (\n\t\t<Layout>\n\t\t\t<div style={{ color: `teal` }}>\n\t\t\t\t{data.allMarkdownRemark.edges.map(({ node }) => (\n\t\t\t\t\t<h1>{node.frontmatter.title}</h1>\n\t\t\t\t))}\n\n\t\t\t\t{/* HTML SECTION */}\n\t\t\t\t{data.allMarkdownRemark.edges.map(({ node }) => (\n\t\t\t\t\t<div dangerouslySetInnerHTML={{ __html: node.html}} />\n\t\t\t\t))}\n\n\t\t\t\t<Link to=\"/\">Home</Link>\t\t\t\n\t\t\t</div>\n\t\t</Layout>\n\t)\n}\n\n\n// This is the GraphQL filter that determines what is available to site\nexport const query = graphql`\n  query {\n\t\tallMarkdownRemark(\n      filter: { frontmatter: {layout: {eq: \"aboutpg\"}}}) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMM, YYYY\")\n          }\n          fields {\n            slug\n          }\n          html\n        }\n      }\n    }\n  }\n`\n\nexport default AboutPage","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { Link } from 'gatsby'\n\n// ListLink is used in the Header component. Only use gatsby Link\n// for internal links!!! Use <a> for external links\nconst ListLink = props => (\n  <li style={{ display: 'inline-block', marginRight: '1rem' }}>\n    <Link to={props.to}>{props.children}</Link>\n  </li>\n)\n\nconst Header = ({ siteTitle }) => (\n  <div\n    style={{\n      background: '#2f3143',\n      marginBottom: '1.45rem',\n    }}\n  >\n    <div\n      style={{\n        margin: '0 auto',\n        maxWidth: 960,\n        padding: '1.45rem 1.0875rem',\n      }}\n    >\n      {/* This is where you place the links in the upper Right */}\n      <header style={{ marginBottom: `0rem` }}>\n        <ul style={{ listStyle: `none`, float: `right` }}>\n          <ListLink to=\"/about/\">About</ListLink>\n          <ListLink to=\"/projects/\">Projects</ListLink>\n          <a href=\"http://app.simonxu.com\">WebApp</a>\n        </ul>\n      </header>\n      \n      {/* This refers to the white title link which goes Home */}\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: 'white',\n            textDecoration: 'none',\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </div>\n)\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport './layout.css'\n\nconst Layout = ({ children }) => (\n  // StaticQuery allows non-page components to retrieve GraphQL\n  // queries\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: 'Sample' },\n            { name: 'keywords', content: 'sample, something' },\n          ]}\n        >\n          <html lang=\"en\" />\n        </Helmet>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: '0 auto',\n            maxWidth: 960,\n            padding: '0px 1.0875rem 1.45rem',\n            paddingTop: 0,\n          }}\n        >\n          {children}\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}