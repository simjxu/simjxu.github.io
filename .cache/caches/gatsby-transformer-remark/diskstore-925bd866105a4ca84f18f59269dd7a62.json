{"expireTime":9007200869921788000,"key":"transformer-remark-markdown-html-ast-5a4e3145f05d939faac1c9d7d70d1dc4--","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I had quite a few struggles getting BLE to work, until I finally decided to test out an Arduino (shudder) example of the BLE implemention on the B-L475E. Hopefully, insights gleaed from this will point me in the right direction for the manual implementation of the BLE library. The working example is located here: ","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":316,"offset":316}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/stm32duino/STM32Examples/blob/master/examples/Boards/STM32L475VG-DISCOVERY-IOT/BTLE_sensors_TimeOfFlight_demo/BTLE_sensors_TimeOfFlight_demo.ino"},"children":[{"type":"text","value":"https://github.com/stm32duino/STM32Examples/blob/master/examples/Boards/STM32L475VG-DISCOVERY-IOT/BTLE","position":{"start":{"line":2,"column":316,"offset":316},"end":{"line":2,"column":418,"offset":418}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"sensors","position":{"start":{"line":2,"column":419,"offset":419},"end":{"line":2,"column":426,"offset":426}}}],"position":{"start":{"line":2,"column":418,"offset":418},"end":{"line":2,"column":427,"offset":427}}},{"type":"text","value":"TimeOfFlight","position":{"start":{"line":2,"column":427,"offset":427},"end":{"line":2,"column":439,"offset":439}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"demo/BTLE","position":{"start":{"line":2,"column":440,"offset":440},"end":{"line":2,"column":449,"offset":449}}}],"position":{"start":{"line":2,"column":439,"offset":439},"end":{"line":2,"column":450,"offset":450}}},{"type":"text","value":"sensors","position":{"start":{"line":2,"column":450,"offset":450},"end":{"line":2,"column":457,"offset":457}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"TimeOfFlight","position":{"start":{"line":2,"column":458,"offset":458},"end":{"line":2,"column":470,"offset":470}}}],"position":{"start":{"line":2,"column":457,"offset":457},"end":{"line":2,"column":471,"offset":471}}},{"type":"text","value":"demo.ino","position":{"start":{"line":2,"column":471,"offset":471},"end":{"line":2,"column":479,"offset":479}}}],"position":{"start":{"line":2,"column":316,"offset":316},"end":{"line":2,"column":479,"offset":479}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":479,"offset":479}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"There are a few dependencies to get this working. In ","position":{"start":{"line":4,"column":1,"offset":481},"end":{"line":4,"column":54,"offset":534}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"main.cpp"}],"position":{"start":{"line":4,"column":54,"offset":534},"end":{"line":4,"column":64,"offset":544}}},{"type":"text","value":", there is a set of comments on the top pointing you to the driver libraries, and of course, you need the SPBTLE-RF library, which depends upon Arduino.h.","position":{"start":{"line":4,"column":64,"offset":544},"end":{"line":4,"column":218,"offset":698}}}],"position":{"start":{"line":4,"column":1,"offset":481},"end":{"line":4,"column":218,"offset":698}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/simjxu/simjxu.github.io/gh-pages/img/SPBTLE-RF_lib.jpg","alt":"SPBTLE-lib"},"children":[],"position":{"start":{"line":6,"column":1,"offset":700},"end":{"line":6,"column":104,"offset":803}}}],"position":{"start":{"line":6,"column":1,"offset":700},"end":{"line":6,"column":104,"offset":803}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Inside this example, the top level function that publishes the data to BLE is the function called  ","position":{"start":{"line":8,"column":1,"offset":805},"end":{"line":8,"column":100,"offset":904}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"update_environment_data"}],"position":{"start":{"line":8,"column":100,"offset":904},"end":{"line":8,"column":125,"offset":929}}}],"position":{"start":{"line":8,"column":1,"offset":805},"end":{"line":8,"column":125,"offset":929}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-cpp"]},"children":[{"type":"text","value":"void update_environment_data(){\n  float humidity, temperature;\n  float pressure, temperature_lps22hb;\n\n  HumTemp->GetHumidity(&humidity);\n  HumTemp->GetTemperature(&temperature);\n\n  PressTemp->GetPressure(&pressure);\n  PressTemp->GetTemperature(&temperature_lps22hb);\n\n  //Update environnemental data\n  SensorService.Temp_Update(temperature*10);\n  SensorService.Press_Update(pressure*100);\n  SensorService.Humidity_Update(humidity*10);\n}\n"}],"position":{"start":{"line":10,"column":1,"offset":931},"end":{"line":26,"column":4,"offset":1379}}}],"position":{"start":{"line":10,"column":1,"offset":931},"end":{"line":26,"column":4,"offset":1379}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Once I load the firmware onto the device, I am able to use the LightBlue mobile app from PunchThrough to observe these three characteristics. You can see below that the humidity is 59.3% (593/10) and the temperature is 23.4 deg C (234/10).","position":{"start":{"line":28,"column":1,"offset":1381},"end":{"line":28,"column":240,"offset":1620}}}],"position":{"start":{"line":28,"column":1,"offset":1381},"end":{"line":28,"column":240,"offset":1620}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/simjxu/simjxu.github.io/gh-pages/img/lightblue_att.jpg","alt":"temp-humid-ble"},"children":[],"position":{"start":{"line":30,"column":1,"offset":1622},"end":{"line":30,"column":108,"offset":1729}}}],"position":{"start":{"line":30,"column":1,"offset":1622},"end":{"line":30,"column":108,"offset":1729}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":32,"column":1,"offset":1731}}}}