{"expireTime":9007200904828481000,"key":"transformer-remark-markdown-ast-31ca04b8ed79acbfc1703ab31cdadb2d--","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"I've fully switched over ot using mbed compile tools on mbed-cli, which does drastically simplify the GCC compile process. In my most recent update, which I have now tagged v1 on the ","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":184,"offset":184},"indent":[]}},{"type":"inlineCode","value":"stm32_discovery_mbed","position":{"start":{"line":2,"column":184,"offset":184},"end":{"line":2,"column":206,"offset":206},"indent":[]}},{"type":"text","value":" repository, I have the LED control of the discovery board over BLE. This code was copied from another repository, and took a little finagling to get it to work. Turns out, a lot of the newer mbed-os compile scripts run on python3, since python 2 is deprecated.","position":{"start":{"line":2,"column":206,"offset":206},"end":{"line":2,"column":467,"offset":467},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":467,"offset":467},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I decided to create a Dockerfile which allows others to compile the code with the same environment. Ultimately, there is a messy step which requires copying over a \"tools\" folder to replace the one from the outdated mbed-os version.","position":{"start":{"line":4,"column":1,"offset":469},"end":{"line":4,"column":233,"offset":701},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":469},"end":{"line":4,"column":233,"offset":701},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"As you can see from the Dockerfile I have (copied below), I am following the mbed recommended Dockerfile build, but I needed to add an additional line command in my ","position":{"start":{"line":6,"column":1,"offset":703},"end":{"line":6,"column":166,"offset":868},"indent":[]}},{"type":"inlineCode","value":"fixes.sh","position":{"start":{"line":6,"column":166,"offset":868},"end":{"line":6,"column":176,"offset":878},"indent":[]}},{"type":"text","value":" bash script to overwrite the outdated compile script.","position":{"start":{"line":6,"column":176,"offset":878},"end":{"line":6,"column":230,"offset":932},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":703},"end":{"line":6,"column":230,"offset":932},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"# ------------------------------------------------------------------------------\n# Pull base image\nFROM ubuntu:20.04\n\n\n# ------------------------------------------------------------------------------\n# Arguments\nARG WORKDIR=/root\nARG MBED_OS_VER=master\n\n# ------------------------------------------------------------------------------\n# Install tools via apt\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt -y update && \\\n    apt -y install git \\\n    wget \\\n    python3 \\\n    python3-dev \\\n    python3-setuptools \\\n    python3-usb \\\n    python3-pip \\\n    software-properties-common \\\n    build-essential \\\n    cmake \\\n    astyle \\\n    mercurial \\\n    ninja-build \\\n    libssl-dev \\\n    cargo \\\n    && apt clean && rm -rf /var/lib/apt/lists\n\n# Cmake (Mbed OS requires >=3.19.0-rc3 version which is not available in Ubuntu 20.04 repository)\nRUN set -x \\\n    && (cd /tmp \\\n    && [ \"$(uname -m)\" = \"aarch64\" ] && \\\n        CMAKE_SCRIPT=\"cmake-3.19.3-Linux-aarch64.sh\" || \\\n        CMAKE_SCRIPT=\"cmake-3.19.3-Linux-x86_64.sh\" \\  \n    && wget --progress=dot:giga https://github.com/Kitware/CMake/releases/download/v3.19.3/${CMAKE_SCRIPT} \\\n    && sh ${CMAKE_SCRIPT} --exclude-subdir --prefix=/usr/local \\\n    && rm -rf ${CMAKE_SCRIPT}) \\\n    && exec bash \\\n    && : # last line\n\n# ------------------------------------------------------------------------------\n# Install Python modules (which are not included in requirements.txt)\nRUN pip3 install -U \\\n    mbed-cli \\\n    mbed-tools\n\n# Set up mbed environment\nWORKDIR /tmp/\nRUN wget https://github.com/ARMmbed/mbed-os/raw/${MBED_OS_VER}/requirements.txt && \\\n    pip3 install -r requirements.txt && \\\n    rm requirements.txt\n\n# ------------------------------------------------------------------------------\n# Install arm-none-eabi-gcc\nWORKDIR /opt/mbed-os-toolchain\nRUN [ \"$(uname -m)\" = \"aarch64\" ] && \\\n        TARBALL=\"gcc-arm-none-eabi-9-2019-q4-major-aarch64-linux.tar.bz2\" || \\\n        TARBALL=\"gcc-arm-none-eabi-9-2019-q4-major-x86_64-linux.tar.bz2\" && \\\n    wget -q https://developer.arm.com/-/media/Files/downloads/gnu-rm/9-2019q4/RC2.1/${TARBALL} && \\\n    tar -xjf ${TARBALL} && \\\n    rm ${TARBALL}\n\n# ------------------------------------------------------------------------------\n# Configure mbed build system\nRUN set -x \\\n    && mbed config -G GCC_ARM_PATH /opt/mbed-os-toolchain/gcc-arm-none-eabi-9-2019-q4-major/bin/ \\\n    && mbed toolchain -G -s GCC_ARM \\\n    && : # last line\n\n# ------------------------------------------------------------------------------\n# Configure environment variables\nENV MBED_GCC_ARM_PATH=/opt/mbed-os-toolchain/gcc-arm-none-eabi-9-2019-q4-major/bin/\nENV PATH=\"${PATH}:${MBED_GCC_ARM_PATH}\"\n\n# ------------------------------------------------------------------------------\n# Display and save environment settings\nRUN python3 --version | tee env_settings && \\\n    arm-none-eabi-gcc --version | tee -a env_settings && \\\n    (echo -n 'mbed-cli ' && mbed --version) | tee -a env_settings && \\\n    (echo -n 'mbed-greentea ' && mbedgt --version) | tee -a env_settings && \\\n    (echo -n 'mbed-host-tests ' && mbedhtrun --version) | tee -a env_settings && \\\n    (echo -n 'mbed-tools ' && mbed-tools --version) | tee -a env_settings\n\nWORKDIR /work\n\n# Copy all files into a directory called \"work\"\nADD . /work\n\n# Run fixes.sh, which replaces the \"tools\" folder with an updated folder\nRUN chmod u+x fixes.sh && \\\n    ./fixes.sh","position":{"start":{"line":8,"column":1,"offset":934},"end":{"line":103,"column":4,"offset":4338},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Next steps: add in sensor readings to BLE, try upgrading to the latest Mbed-OS","position":{"start":{"line":105,"column":1,"offset":4340},"end":{"line":105,"column":79,"offset":4418},"indent":[]}}],"position":{"start":{"line":105,"column":1,"offset":4340},"end":{"line":105,"column":79,"offset":4418},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":105,"column":79,"offset":4418}}}}